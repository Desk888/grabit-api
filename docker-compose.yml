services:
  myapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grabit-api-service
    depends_on:
      - db
      - redis
      - minio 
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - CLIENT_CALLBACK_URL=${CLIENT_CALLBACK_URL}
      - S3_ENDPOINT=minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_USE_SSL="false"
      - S3_BUCKET_NAME="test-bucket"
    ports:
      - 8080:8080

  db:
    image: postgres:15
    container_name: my-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  minio:
    image: quay.io/minio/minio
    container_name: my-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # MinIO Console UI
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  db_data:
  redis_data:
  minio_data:
